package com.pandy.web.servlet;

import java.io.IOException;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.pandy.domain.Product;
import com.pandy.service.ProductService;

/**
 * Servlet implementation class ProductInfoServlet
 * 查询当前商品的相关数据
 */
public class ProductInfoServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ProductInfoServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
		
		//获得当前页
		String currentPage = request.getParameter("currentPage");
		
		//获得商品类别
		String cid= request.getParameter("cid");
		
		//获得当前要查询商品的pid
		String pid = request.getParameter("pid");
		ProductService service = new ProductService();
		Product product = service.findProductByPid(pid);
		request.setAttribute("product", product);
		
		
		request.setAttribute("currentPage", currentPage);
		request.setAttribute("cid", cid);
		
		//获得客户端携带的cookie---获得名字是pids的cookie
		String pids = "";
		Cookie[] cookies = request.getCookies();
		if(cookies!=null) {
			for(Cookie cookie : cookies) {
				if("pids".equals(cookie.getName())) {
					pids = cookie.getValue();
					//将pids拆成一个数组
					String[] split = pids.split("-");
					List<String> asList = Arrays.asList(split);
					LinkedList list = new LinkedList<String>(asList);
					//判断集合中是否存在当前的cid
					if(list.contains(pid)) {
						//包含当前查看商品的pid
						list.remove(pid);
						list.addFirst(pid);
					}else {
						//不包含pid 直接将该pid放在最上面
						list.addFirst(pid);
					}
					//将[x,y,z]转成字符串
					StringBuffer sb = new StringBuffer();
					for(int i=0;i<list.size();i++) {
						sb.append(list.get(i));
						sb.append("-");//[x-y-z]
					}
					//去掉最后面的-
					sb.substring(0,sb.length()-1);
				}
			}
		}
		
		
		//当转发之前 创建cookie存储pid
		
		
		//已经有带值跳转到相关的页面
		request.getRequestDispatcher("/product_info.jsp").forward(request,response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
