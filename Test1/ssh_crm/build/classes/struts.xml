<?xml version="1.0" encoding="UTF-8"?>
  <!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
	
<struts>
	<!-- #  struts.objectFactory = spring	将action的创建交给spring容器	
			struts.objectFactory.spring.autoWire = name spring负责装配Action依赖属性
			-->
	<constant name="struts.objectFactory" value="spring"></constant>
	<!--  extends="struts-default"           
		表示当前这个package继承了另外一个名字叫做struts-default的package
		这个package在struts2的核心jar包中的struts-default.xml文件中定义的里面定义了很多默 认的配置
	-->
	<package name="crm" namespace="/" extends="struts-default" >
		<global-exception-mappings>
			<exception-mapping result="error" exception="java.lang.RuntimeException"></exception-mapping>
		</global-exception-mappings>
	
		<!-- 整合方案1:class属性上仍然配置action的完整类名
				struts2仍然创建action,由spring负责组装Action中的依赖属性
		 -->
		 <!-- 
		 	整合方案2:class属性上填写spring中action对象的BeanName
		 		完全由spring管理action生命周期,包括Action的创建
		 		注意:需要手动组装依赖属性
		  -->
		<action name="UserAction_*" class="userAction" method="{1}" >
			<result name="toHome" type="redirect" >/index.htm</result>
			<result name="error" >/login.jsp</result>
		</action>
		
		<action name="CustomerAction_*" class="customerAction" method="{1}" >
			<result name="list"  >/jsp/customer/list.jsp</result>
			<result name="tolist" type="redirectAction"  >
				<param name="namespace">/</param>
				<param name="actionName">CustomerAction_list</param>
			</result>
		</action>
		<!--  数据字典action-->
		<action name="BaseDictAction" class="baseDictAction" method="execute" ></action>
		<!--  联系人action配置-->
		<action name="LinkManAction_*" class="linkManAction" method="{1}" >
			
			<result name="toList" type="redirectAction"  >
				<param name="namespace">/</param>
				<param name="actionName">LinkManAction_list</param>
			</result>
		</action>
	</package>
</struts>
	