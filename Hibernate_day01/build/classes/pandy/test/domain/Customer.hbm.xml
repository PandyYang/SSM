<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- 配置表与实体对象的关系-->
<!-- mapping 后面也可以加上package属性 这个属性的优点就是 凡是需要写完整类名 的属性 

	都可以直接写出简答类名 -->
<hibernate-mapping>
		<!-- class元素：配置实体与表的对应关系的
			name:完整类名
			table：数据库表名
		 -->
		<!-- 建立类和表的一个映射 -->
	<class name="pandy.test.domain.Customer" table="cst_customer">
		<!-- id元素：配置主键映射的属性
			name：填写主键对应的属性名
			column：填写表中的主键列名
		 -->
		<id name="cust_id" column="cust_id">
		<!-- 主键生成策略 -->
		<generator class="native"/>
		</id>
		
		<!--property元素：配置除id之外的普通属性映射
			name：填写属性名
			column：填写属性对应的列名
		其他属性：	type：填写列（属性）类型，不写的话，hibernate会自动检测实体的属性类型
					每个类型有三种写法：分别是java类型，hibernate类型，或者数据库类型
					not-null：配置该属性是否不能为空，默认值是false
					length：配置数据库中列的长度，默认值：自动取当前数据库类型的最大长度
					
			
		  -->
		<!-- 类中普通的属性和表中字段的映射 -->
		<property name="cust_name" column="cust_name" type="string"/>
		<property name="cust_industry" column="cust_industry" type="string"/>
		<property name="cust_level" column="cust_level" type="string"/>
		<property name="cust_linkman" column="cust_linkman" type="string"/>
		<property name="cust_phone" column="cust_phone" type="string"/>
		<property name="cust_mobile" column="cust_mobile" type="string"/>
	</class>
</hibernate-mapping>